---
apiVersion: core.gardener.cloud/v1beta1
kind: ControllerDeployment
metadata:
  name: oidc-apps-controller
type: helm
providerConfig:
  chart: 
  values:
    replicas: 1
    clients:
      - name: local
        clientId: local
    image:
      repository: europe-docker.pkg.dev/gardener-project/snapshots/gardener/extensions/oidc-apps-controller
      tag: latest
    imagePullPolicy: Always
    webhook:
      namespaceSelector:
        matchExpressions:
          - {key: "shoot.gardener.cloud/no-cleanup", operator: "NotIn", values: ["true"]}
          - {key: "gardener.cloud/purpose", operator: "NotIn", values: ["kube-system"]}
          - {key: "kubernetes.io/metadata.name", operator: "NotIn", values: ["kube-system"]}
          - {key: "gardener.cloud/role", operator: "NotIn", values: ["extension"]}
      # TODO: Add the moment there is no single label key to identify the components which should be
      # enahnaced by the webhook. This setup is not recommended in production environments.
      # For production environments, there shall be a single key on pod level and each component
      # shall have it own value
      # objectSelector:
      #   matchExpressions:
      #     - {key: "gardener.cloud/role", operator: "In", values: ["plutono", "prometheus", ...]}
    vpa:
      enabled: true
    configuration:
      oauth2Proxy:
        sslInsecureSkipVerify: true
        insecureOidcSkipIssuerVerification: false
        oidcIssuerUrl: "https://dexidp:5556"
        scope: "openid email groups"
      kubeRbacProxy:
        oidcCABundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUROakNDQWg2Z0F3SUJBZ0lVUnhGbEtnWGgzQWROYThhRHBadCs1MXdUSE5Zd0RRWUpLb1pJaHZjTkFRRUwKQlFBd016RWVNQndHQTFVRUNoTVZaRzlqYTJWeU9uQnliM1pwWkdWeUxXeHZZMkZzTVJFd0R3WURWUVFERXdoTQpiMk5oYkNCRFFUQWVGdzB5TkRBeU1UWXlNVE0wTURCYUZ3MHlPVEF5TVRReU1UTTBNREJhTURNeEhqQWNCZ05WCkJBb1RGV1J2WTJ0bGNqcHdjbTkyYVdSbGNpMXNiMk5oYkRFUk1BOEdBMVVFQXhNSVRHOWpZV3dnUTBFd2dnRWkKTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEaUNRZ001Mk51dko4a1p2aUU5M0JHN3ZobgpjNzV3bkVMdDlEWE5SWkhwa0xqSHFWV2xuaDV1T1k1d0FNS2pYY0N5NG1NZFFHdHVseVZBOFIyR2NTTFhlcmxYCnM0Z2hwSklyMTNMZ0RMY2UwSVc0WHlMdDVYVjFKRisxWDdJY3hicXZCTTcxMXVEb3FlNG9abGRFYVZCSXlxdWcKZS9GVFk5c2h5dHhHaEViWGErUU5KWWtEaDE4enhuR2JsVDhMSVhqd05qQVBEZTM5YVNwaW1JVkd0M0lLSkhHeQp2RmprSGM2RFlMYm9GV1hMekd4a1lqVUVDZFFsWkdaeVJHQ1ZIM3JCQVFyd2VJS005REVvbVppWW9jSlEzM24wCjZ6S25jaEdhZXlYNnZITk9yNVhnQzk1WXVmWlJMNmhlTWxTN01qMkNyL1R0bXgvMkgvNDZFcGM2NzRDakFnTUIKQUFHalFqQkFNQTRHQTFVZER3RUIvd1FFQXdJQkJqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRVwpCQlRWUC96NTQ4WmlGK1o0emZrQVh4ODVlMkJ2bURBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWxRUllibWJYCnZHNkJCMUVDS0xpNHpoNitmeU93cG9TTDRIWW14ZE5aRjVVV1ZFencraS9JY1hJOVVDUTYxYVhjU3hPTE1vN3YKOG5nYkg0SE9CdFZ5dVdrRWN4Yit1SjBYU1ZDVDlZd2J6ZUFocXhoaGNJTzBobUFJYlhGRWRKQ3FiWHhndUplSQpEUjVKMnlTM24rbGxRY0NVeCtiWUR5YVdTOE9lamhTbTlIbHl5WUpHN1hjd2VBMkV6S3cxU2kvQjkvLzV3NlBRCmFuUng2WFlYMG9lUk1rZ245NkMwQU81TFNza2pxUnBBeEdtbnZiS2wzSklIcC9wQVpybStuN3Z4aVhvQjcvdi8KblFKbXExQ1NxamJmNWd4TGJUR0svcVR6TzlqLzJHL3FxRkhuVFZSR1NETWoxclhMT0ppdFpoOHdWNzBzc1ZJZQpyRGhKWWRNejEzZjdMQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    targets:
      - name: "shoot--plutono"
        namespaceSelector:
          matchLabels:
            gardener.cloud/role: shoot
        labelSelector:
          matchLabels:
            component: plutono
        targetPort: 3000
        ingress:
          create: true
          hostPrefix: pl
          ingressClassName: "nginx-ingress-gardener"
          tlsSecretRef:
            name: "ingress-wildcard-cert"
      - name: "shoot--prometheus"
        namespaceSelector:
          matchLabels:
            gardener.cloud/role: shoot
        labelSelector:
          matchLabels:
            app: prometheus
        targetPort: 9090
        ingress:
          create: true
          hostPrefix: pr
          ingressClassName: "nginx-ingress-gardener"
          tlsSecretRef:
            name: "ingress-wildcard-cert"
      - name: "garden-plutono"
        namespaceSelector:
          matchLabels:
            project.gardener.cloud/name: garden
        labelSelector:
          matchLabels:
            component: plutono
        targetPort: 3000
        ingress:
          create: true
          ingressClassName: "nginx-ingress-gardener"
          tlsSecretRef:
            name: "ingress-wildcard-cert"
            namespace: "garden"
      - name: "garden-seed-prometheus"
        namespaceSelector:
          matchLabels:
            project.gardener.cloud/name: garden
        labelSelector:
          matchLabels:
            app: seed-prometheus
        targetPort: 9090
        ingress:
          create: true
          ingressClassName: "nginx-ingress-gardener"
          tlsSecretRef:
            name: "ingress-wildcard-cert"
            namespace: "garden"
      - name: "garden-aggregate-prometheus"
        namespaceSelector:
          matchLabels:
            project.gardener.cloud/name: garden
        labelSelector:
          matchLabels:
            app: aggregate-prometheus
        targetPort: 9090
        ingress:
          create: true
          ingressClassName: "nginx-ingress-gardener"
          tlsSecretRef:
            name: "ingress-wildcard-cert"
            namespace: "garden"
      - name: "garden-prometheus-cache"
        namespaceSelector:
          matchLabels:
            project.gardener.cloud/name: garden
        labelSelector:
          matchLabels:
            name: cache
            app: prometheus
        targetPort: 9090
        ingress:
          create: true
          ingressClassName: "nginx-ingress-gardener"
          tlsSecretRef:
            name: "ingress-wildcard-cert"
            namespace: "garden"
---
apiVersion: core.gardener.cloud/v1beta1
kind: ControllerRegistration
metadata:
  name: oidc-apps-controller
  annotations:
    security.gardener.cloud/pod-security-enforce: baseline
spec:
  deployment:
    deploymentRefs:
    - name: "oidc-apps-controller"
    policy: Always
---
